diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index bdba21a..609122c 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,58 +1,12 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/lld/ELF/Config.h b/lld/ELF/Config.h
---- a/lld/ELF/Config.h
-+++ b/lld/ELF/Config.h
-@@ -619,7 +619,6 @@
-   };
-   ElfSym sym{};
-   std::unique_ptr<SymbolTable> symtab;
--  SmallVector<Symbol *, 0> synthesizedSymbols;
- 
-   SmallVector<std::unique_ptr<MemoryBuffer>> memoryBuffers;
-   SmallVector<ELFFileBase *, 0> objectFiles;
-diff -ruN --strip-trailing-cr a/lld/ELF/Writer.cpp b/lld/ELF/Writer.cpp
---- a/lld/ELF/Writer.cpp
-+++ b/lld/ELF/Writer.cpp
-@@ -149,7 +149,6 @@
-   if (!s || s->isDefined() || s->isCommon())
-     return nullptr;
- 
--  ctx.synthesizedSymbols.push_back(s);
-   s->resolve(ctx, Defined{ctx, ctx.internalFile, StringRef(), STB_GLOBAL,
-                           stOther, STT_NOTYPE, val,
-                           /*size=*/0, sec});
-@@ -283,7 +282,6 @@
- static void demoteSymbolsAndComputeIsPreemptible(Ctx &ctx) {
-   llvm::TimeTraceScope timeScope("Demote symbols");
-   DenseMap<InputFile *, DenseMap<SectionBase *, size_t>> sectionIndexMap;
--  bool hasDynSymTab = ctx.arg.hasDynSymTab;
-   for (Symbol *sym : ctx.symtab->getSymbols()) {
-     if (auto *d = dyn_cast<Defined>(sym)) {
-       if (d->section && !d->section->isLive())
-@@ -296,12 +294,11 @@
-                   sym->type)
-             .overwrite(*sym);
-         sym->versionId = VER_NDX_GLOBAL;
--        if (sym->includeInDynsym(ctx))
--          sym->isExported = true;
-       }
-     }
- 
--    if (hasDynSymTab)
-+    sym->isExported = sym->includeInDynsym(ctx);
-+    if (ctx.arg.hasDynSymTab)
-       sym->isPreemptible = sym->isExported && computeIsPreemptible(ctx, *sym);
-   }
- }
-@@ -1839,11 +1836,6 @@
-     }
-   }
- 
--  // If the previous code block defines any non-hidden symbols (e.g.
--  // __global_pointer$), they may be exported.
--  for (Symbol *sym : ctx.synthesizedSymbols)
--    sym->isExported = sym->includeInDynsym(ctx);
--
-   demoteSymbolsAndComputeIsPreemptible(ctx);
- 
-   if (ctx.arg.copyRelocs && ctx.arg.discard != DiscardPolicy::None)
+diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/lld/BUILD.bazel b/utils/bazel/llvm-project-overlay/lld/BUILD.bazel
+--- a/utils/bazel/llvm-project-overlay/lld/BUILD.bazel
++++ b/utils/bazel/llvm-project-overlay/lld/BUILD.bazel
+@@ -43,6 +43,7 @@
+     srcs = [":config_version_gen"] + glob(["Common/*.cpp"]),
+     hdrs = glob(["include/lld/Common/*.h"]),
+     includes = ["include"],
++    textual_hdrs = glob(["include/lld/Common/*.inc"]),
+     deps = [
+         ":vcs_version",
+         "//llvm:CodeGen",
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 9a336b9..3a734a0 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "2e5a5237daf82a657561c490845c406e13657311"
-    LLVM_SHA256 = "e0622b7f81a046e1576d8d07c5ba916346c2a1c06528655d3ddd45a1028eac89"
+    LLVM_COMMIT = "e0c7f081f1582d49f81ec4c6cdbf5d6ef13c58ba"
+    LLVM_SHA256 = "cbc8748bf153ae2d0f2f910930e14fa15ac38bab384634ada12247a2bb2bcf6a"
 
     tf_http_archive(
         name = name,
